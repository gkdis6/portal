/* Reset some defaults */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    background-color: #1c1c1e; /* Dark background */
    color: #ffffff;
    padding: 20px;
}

h1 {
    text-align: center;
    color: #f2f2f7;
    margin-bottom: 25px;
    font-size: 28px;
    font-weight: 600;
}

/* Controls at the top */
.controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    margin-bottom: 30px;
}

.controls select,
.controls button {
    padding: 10px 15px;
    border-radius: 8px;
    border: 1px solid #3a3a3c;
    background-color: #2c2c2e;
    color: #f2f2f7;
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.controls select {
    appearance: none; /* Remove default dropdown arrow */
    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20fill%3D%22none%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%3E%3Cpath%20d%3D%22M5%207.5L10%2012.5L15%207.5%22%20stroke%3D%22%23E5E5EA%22%20stroke-width%3D%221.66667%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22/%3E%3C/svg%3E');
    background-repeat: no-repeat;
    background-position: right 10px center;
    padding-right: 35px; /* Space for custom arrow */
}

.controls button#addWidget {
    background-color: #007aff;
    border-color: #007aff;
    color: white;
    font-weight: 500;
}

.controls button#addWidget:hover {
    background-color: #005ecb;
}

.controls select:hover,
.controls button:hover {
    background-color: #3a3a3c;
}

/* Widget Container - Grid Layout */
#widgetContainer {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
    grid-auto-rows: 160px; /* Set a fixed row height */
    /* Try align-items: start if widgets are stretching unexpectedly */
    /* align-items: start; */
    gap: 20px;
    padding: 10px;
}

/* Base Widget Style */
.widget {
    background-color: #2c2c2e; /* Default widget background */
    border-radius: 18px; /* iOS like rounded corners */
    padding: 15px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    overflow: hidden; /* Ensure content respects border radius */
    position: relative; /* For positioning elements inside like the remove button */
    color: #f2f2f7;
    /* Define aspect ratio for square-like widgets, can be overridden */
    display: flex;
    flex-direction: column; /* Stack content vertically */
    justify-content: space-between; /* Push content apart if needed */
    transition: transform 0.2s ease-in-out;
    padding-top: 45px; /* Increase top padding to make space for icon */
    padding-left: 15px;
    padding-right: 15px;
    padding-bottom: 15px;
}

.widget:hover {
    transform: translateY(-3px); /* Slight lift effect on hover */
}

/* Widget Icon Style */
.widget-icon {
    position: absolute;
    top: 12px;
    left: 15px;
    font-size: 20px; /* Adjust size as needed */
    opacity: 0.6; /* Make it slightly subtle */
    color: inherit; /* Inherit color, but can be overridden */
}

/* Specific icon colors (optional) */
.widget.memo .widget-icon {
    color: rgba(0, 0, 0, 0.6); /* Darker icon on yellow bg */
}

/* Widget Content Container Style */
.widget-content {
    flex-grow: 1; /* Allow content to fill remaining space */
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Prevent content overflow */
}


.widget.todo .widget-content > div { /* Target the container div inside todo's content */
    height: 100%; /* Ensure todo's inner container takes full height */
}

/* Type-specific styles (Examples - customize as needed) */
.widget.memo {
    background-color: #ffcc00; /* Yellowish */
    color: #1c1c1e;
}

.widget.timer {
    background-color: #ff9500; /* Orangish */
}

.widget.list {
    background-color: #34c759; /* Greenish */
}

.widget.todo {
    background-color: #ff3b30; /* Reddish */
    /* Example: Make todo list taller */
    /* aspect-ratio: 1 / 1.5; */
    /* grid-row: span 2; If you want varying heights */
}

.widget.shortcut {
    background-color: #34c759; /* Same as old list, Greenish */
    /* Allow shortcuts to take more vertical space if needed */
    /* grid-row: span 2; */ 
}

/* Styling for elements INSIDE widgets */
.widget textarea,
.widget input[type="text"] {
    width: 100%;
    padding: 8px;
    border-radius: 6px;
    border: none;
    background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent background */
    color: inherit; /* Inherit color from widget */
    font-size: 14px;
    margin-bottom: 10px;
    resize: vertical; /* Allow vertical resize for textarea */
    flex-grow: 1; /* Allow textarea/input to fill space */
}

.widget textarea {
    min-height: 60px; /* Minimum height for textarea */
}

.widget button {
    padding: 8px 12px;
    border-radius: 6px;
    border: none;
    background-color: rgba(255, 255, 255, 0.2);
    color: inherit;
    font-size: 13px;
    cursor: pointer;
    transition: background-color 0.2s ease;
    margin-top: 5px; /* Spacing between buttons or elements */
}

.widget button:hover {
    background-color: rgba(255, 255, 255, 0.3);
}

/* Specific button styling within widgets if needed */
.widget.timer button {
    width: 100%;
    flex-grow: 1; /* Make timer button fill space */
    font-weight: 500;
}

.widget.todo button {
    /* Style Add button in todo */
    margin-left: 5px;
}

.widget ul {
    list-style: none;
    padding: 0;
    margin-top: 10px;
    flex-grow: 1;
    overflow-y: auto; /* Allow scrolling if list is long */
}

.widget li {
    padding: 4px 0;
    font-size: 14px;
    display: flex; /* For todo item layout */
    justify-content: space-between; /* For todo item layout */
    align-items: center; /* For todo item layout */
}

/* Todo list specific item styling */
.widget.todo li span {
    flex-grow: 1; 
    margin-right: 5px;
}

.widget.todo li button { /* Style remove button in todo item */
    padding: 1px 4px; /* Adjust padding */
    font-size: 11px; /* Adjust font size */
    background-color: rgba(0, 0, 0, 0.15);
    flex-shrink: 0;
    border: none;
    border-radius: 3px;
    color: inherit;
    cursor: pointer;
    opacity: 0.6;
    transition: opacity 0.2s ease;
}

.widget.todo li:hover button.remove-item-btn {
    opacity: 1;
}

.widget.todo li.todo-item {
    /* Styles for the list item itself */
    display: flex;
    align-items: center;
    padding: 6px 0; /* Adjust vertical padding */
    border-bottom: 1px solid rgba(255, 255, 255, 0.08); /* Subtle separator */
}

.widget.todo li.todo-item:last-child {
    border-bottom: none;
}

.widget.todo li.todo-item input[type="checkbox"] {
    /* Style the checkbox */
    appearance: none;
    width: 16px;
    height: 16px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%; /* Make it round */
    cursor: pointer;
    margin-right: 0; /* Remove default margin */
    position: relative;
    flex-shrink: 0;
}

.widget.todo li.todo-item input[type="checkbox"]:checked {
    background-color: #007aff; /* iOS blue for checked */
    border-color: #007aff;
}

.widget.todo li.todo-item input[type="checkbox"]:checked::after {
    /* Add a checkmark using pseudo-element */
    content: 'âœ”';
    color: white;
    font-size: 10px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.widget.todo li.todo-item label {
    /* Style the text label */
    flex-grow: 1;
    margin-left: 8px;
    cursor: pointer; /* Allow clicking label to toggle checkbox */
    transition: color 0.2s ease, text-decoration 0.2s ease;
}

.widget.todo li.completed label {
    /* Style for completed items */
    text-decoration: line-through;
    color: rgba(255, 255, 255, 0.4); /* Dim the text */
}

.widget.todo li.completed input[type="checkbox"] {
    background-color: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.2);
}
.widget.todo li.completed input[type="checkbox"]:checked {
    background-color: #007aff;
    border-color: #007aff;
}

/* Base class for widget action buttons (like toggle) */
.widget .widget-action-btn {
    position: absolute;
    top: 8px;
    /* right positioning depends on adjacent buttons */
    width: 20px;
    max-width: 20px; /* Prevent stretching */
    height: 20px;
    border-radius: 50%;
    padding: 0;
    border: none;
    background-color: rgba(0, 0, 0, 0.3);
    color: rgba(255, 255, 255, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: background-color 0.2s ease, color 0.2s ease;
}
.widget-action-btn .material-symbols-outlined {
    font-size: 14px; /* Adjust icon size */
}
.widget-action-btn:hover {
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
}


/* Remove Widget Button Style */
.widget .remove-widget-btn {
    /* Mostly inherits from widget-action-btn or has its own styles */
    /* Ensure it's positioned correctly */
    position: absolute;
    top: 8px;
    right: 8px;
     /* Add existing specific styles if needed */
}

/* Todo Toggle Completed Button Style */
.toggle-completed-btn {
    right: 34px; /* Position left of the remove button (8px + 20px + 6px gap) */
    /* Inherit most styles from .widget-action-btn */
    /* Add specific color/bg if needed */
    background-color: rgba(255, 255, 255, 0.25); /* Example: Different bg */
    color: rgba(255, 255, 255, 0.8);
}
.toggle-completed-btn:hover {
    background-color: rgba(255, 255, 255, 0.4);
    color: white;
}

/* Hiding Completed Todo Items */
.widget.todo.hide-completed .todo-item.completed {
    display: none;
}

/* Custom Scrollbar Styling for Todo List */
.widget.todo ul::-webkit-scrollbar {
    width: 6px; /* Width of the vertical scrollbar */
}

.widget.todo ul::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1); /* Slightly dark track */
    border-radius: 3px;
}

.widget.todo ul::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.3); /* Semi-transparent white thumb */
    border-radius: 3px;
    border: 1px solid rgba(0, 0, 0, 0.1); /* Subtle border */
}

.widget.todo ul::-webkit-scrollbar-thumb:hover {
    background-color: rgba(255, 255, 255, 0.5); /* Lighter on hover */
}

/* Drag and Drop Placeholder Style */
.widget-placeholder {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 18px;
    border: 2px dashed rgba(255, 255, 255, 0.3);
    /* aspect-ratio: 1 / 1; <-- Remove fixed aspect ratio */
    box-sizing: border-box;
    /* Ensure placeholder takes up grid space */
    min-height: 160px; /* Match grid-auto-rows minimum */
}

/* Apply size spans to placeholder as well */
.widget-placeholder.widget-size-tall {
    grid-row: span 2;
    min-height: 340px; /* Optional: Match expected height (160*2 + 20 gap) */
}

.widget-placeholder.widget-size-wide {
    grid-column: span 2;
}

/* Widget Size Classes */
.widget.widget-size-tall {
    grid-row: span 2;
    /* min-height needs to be related to grid-auto-rows * 2 + gap */
    /* min-height: 340px; /* Example: (160 * 2) + 20px gap */
    /* We rely on grid-row span primarily, avoid fixed min-height unless necessary */
}

.widget.widget-size-wide {
    grid-column: span 2; /* Make widget span 2 grid columns */
    /* Optionally adjust aspect ratio if needed, e.g., aspect-ratio: 2 / 1; */
}

/* Specific type adjustments might be needed */
.widget.todo {
    background-color: #ff3b30; /* Reddish */
    /* Remove aspect-ratio setting from here if it exists */
}
.widget.memo {
    background-color: #ffcc00; /* Yellowish */
    color: #1c1c1e;
    /* Remove aspect-ratio setting from here if it exists */
}

.widget.todo ul {
    list-style: none;
    padding: 0;
    margin: 0; /* Remove default margin */
    flex-grow: 1;
    overflow-y: auto; /* Ensure scrolling works */
    /* Explicitly set max-height to prevent infinite growth within the container */
    /* max-height: 100%; This might not work as expected in flex */
}

.widget.todo .widget-content > div { /* The inner container in todo.js */
    height: 100%;
    display: flex; /* Ensure this container is also flex */
    flex-direction: column;
    overflow: hidden; /* Prevent its children from overflowing the widget boundary */
}

/* Timer Widget Specific Styles */
.widget.timer .widget-content {
    justify-content: center; /* Center content vertically */
    align-items: center; /* Center content horizontally */
    text-align: center;
}

.timer-display {
    font-size: 2em; /* Larger font for time */
    font-weight: 500;
    margin-bottom: 10px;
    /* Add transition for potential color changes */
    transition: color 0.3s ease;
}

.timer-controls {
    display: flex;
    flex-direction: column; /* Stack preset and custom controls vertically */
    gap: 8px; /* Space between preset/custom rows */
    margin-top: 10px;
    align-items: center; /* Center control rows */
}

.preset-controls,
.custom-controls {
    display: flex;
    gap: 5px; /* Space between buttons/inputs */
    justify-content: center; /* Center items within the row */
    width: 100%; /* Take full width */
    flex-wrap: wrap; /* Allow items to wrap to the next line */
}

.timer-controls button {
    /* Base style for all buttons in controls */
    padding: 4px 8px;
    font-size: 0.8em;
    background-color: rgba(255, 255, 255, 0.15);
    border: none;
    border-radius: 4px; /* Slightly less rounded */
    color: inherit;
    cursor: pointer;
    transition: background-color 0.2s ease;
    flex-shrink: 0; /* Prevent buttons from shrinking too much */
}
.timer-controls button:hover {
     background-color: rgba(255, 255, 255, 0.25);
}

.preset-controls button.active {
    background-color: rgba(255, 255, 255, 0.3);
    font-weight: bold;
}

.custom-duration-input {
    padding: 4px 8px;
    font-size: 0.8em;
    background-color: rgba(0, 0, 0, 0.2); /* Darker background for input */
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    color: inherit;
    text-align: center;
    width: 100px; /* Fixed width for input */
    flex-grow: 1; /* Allow input to take space if needed */
    min-width: 60px;
}

.set-duration-button {
    /* Specific style if needed, inherits from .timer-controls button */
}

/* Renamed from .start-button */
.action-button {
     width: 80%;
     margin-top: 15px;
     padding: 10px !important;
     font-weight: 600 !important;
}

/* Timer Finished State Animation */
@keyframes flash {
    0%, 100% { background-color: #ff3b30; } /* End color (or original) */
    50% { background-color: #ff9500; } /* Flash color (original orange) */
}

.widget.timer.finished {
    animation: flash 0.5s ease-in-out 3; /* Flash 3 times */
    /* Optionally change display text color when finished */
    /* .timer-display { color: #ff3b30; } */
}

/* Styles for Shortcut Widget Internals */
.shortcut-widget-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
}

.shortcut-list {
    list-style: none;
    padding: 0;
    margin: 0 0 10px 0; /* Space below list */
    flex-grow: 1;
    overflow-y: auto;
    /* Apply custom scrollbar styles */
}

.shortcut-list::-webkit-scrollbar {
    width: 6px;
}
.shortcut-list::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
    border-radius: 3px;
}
.shortcut-list::-webkit-scrollbar-thumb {
    background-color: rgba(255, 255, 255, 0.3);
    border-radius: 3px;
    border: 1px solid rgba(0, 0, 0, 0.1);
}
.shortcut-list::-webkit-scrollbar-thumb:hover {
    background-color: rgba(255, 255, 255, 0.5);
}


.shortcut-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 6px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
}

.shortcut-item:last-child {
    border-bottom: none;
}

/* Style for item being edited */
.shortcut-item.editing {
    background-color: rgba(255, 255, 255, 0.1); /* Subtle highlight */
}

.shortcut-link {
    color: inherit;
    text-decoration: none;
    flex-grow: 1;
    margin-right: 10px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition: color 0.2s ease;
}

.shortcut-link:hover {
    color: rgba(255, 255, 255, 0.7);
}

.shortcut-controls {
    display: flex;
    gap: 5px;
    flex-shrink: 0;
}

.shortcut-controls button {
    padding: 1px 4px;
    font-size: 11px;
    background-color: rgba(0, 0, 0, 0.15);
    border: none;
    border-radius: 3px;
    color: inherit;
    cursor: pointer;
    opacity: 0.6;
    transition: opacity 0.2s ease;
}

.shortcut-item:hover .shortcut-controls button {
    opacity: 1;
}

.shortcut-controls button.edit-btn[disabled] {
    opacity: 0.3;
    cursor: not-allowed;
}

/* Add Shortcut Form Styles */
.add-shortcut-form {
    display: flex;
    gap: 5px;
    margin-top: auto; /* Push form to bottom */
    padding-top: 10px; /* Space above form */
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.add-shortcut-form input[type="text"],
.add-shortcut-form input[type="url"] {
    margin-bottom: 0;
    padding: 6px 8px;
    font-size: 12px;
    min-width: 50px;
    /* Inherit other styles like background, border, color from general input styles */
}

/* Adjust flex-grow for specific inputs */
.add-shortcut-form input[type="text"] { /* Title input */
    /* flex-grow: 2 !important; */ /* Remove flex-grow */
    width: 30%; /* Set explicit percentage width */
}

.add-shortcut-form input[type="url"] { /* URL input */
    /* flex-grow: 5 !important; */ /* Remove flex-grow */
    width: 55%; /* Set explicit percentage width, leaving space for button+gaps */
}

.add-shortcut-form button {
    padding: 6px 10px;
    font-size: 12px;
    flex-shrink: 0;
}